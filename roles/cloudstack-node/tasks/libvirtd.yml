- name: Install Libvirt and KVM dependencies
  apt: 
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - libvirt-daemon-system
      - libvirt-clients
      - qemu-kvm
      - python3-libvirt
      - bridge-utils
      - cpu-checker
      - virtinst

- name: Configure Libvirtd daemon
  lineinfile: 
    path: /etc/libvirt/libvirtd.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    insertafter: EOF
  loop: 
    - { line: 'listen_tls = 0', regexp: '^#?listen_tls' }
    - { line: 'listen_tcp = 1', regexp: '^#?listen_tcp' }
    - { line: 'tcp_port = "16509"', regexp: '^#?tcp_port' }
    - { line: 'auth_tcp = "none"', regexp: '^#?auth_tcp' }
    - { line: 'mdns_adv = 0', regexp: '^#?mdns_adv' }

- name: Remove old libvirtd args configuration
  file:
    path: /etc/default/libvirtd
    state: absent

- name: Remove AppArmor definitions for libvirtd and virt-aa-helper
  shell: apparmor_parser -R {{ item }}
  args:
    creates: "/etc/apparmor.d/disable/{{ item | basename }}"
  loop:
    - /etc/apparmor.d/usr.sbin.libvirtd
    - /etc/apparmor.d/usr.lib.libvirt.virt-aa-helper
  ignore_errors: yes

- name: Disable AppArmor for libvirtd and virt-aa-helper
  file: 
    src: "/etc/apparmor.d/{{ item }}"
    path: "/etc/apparmor.d/disable/{{ item | basename }}"
    state: link
  loop:
    - usr.sbin.libvirtd
    - usr.lib.libvirt.virt-aa-helper

- name: Check if necessary kernel modules are loaded
  shell: lsmod | grep -E 'kvm|kvm_amd' || true
  register: kvm_modules

- name: Load KVM kernel modules if not loaded
  modprobe:
    name: "{{ item }}"
  loop:
    - kvm
    - kvm_amd
  when: "'kvm' not in kvm_modules.stdout"

- name: Stop all related services
  systemd:
    name: "{{ item }}"
    state: stopped
  loop:
    - libvirtd
    - libvirtd.socket
    - virtlogd
    - virtlogd.socket
  ignore_errors: yes

- name: Kill any remaining processes
  shell: "pkill -9 {{ item }} || true"
  loop:
    - libvirtd
    - dnsmasq
    - virtlogd
  ignore_errors: yes

- name: Remove existing socket files
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /var/run/libvirt/libvirt-sock
    - /var/run/libvirt/libvirt-sock-ro
    - /var/run/libvirt/virtlogd-sock
    - /var/run/libvirt/virtlogd-admin-sock
  ignore_errors: yes

- name: Reset failed state for services
  command: systemctl reset-failed {{ item }}
  loop:
    - libvirtd
    - libvirtd.socket
    - virtlogd
    - virtlogd.socket
  ignore_errors: yes

- name: Wait for processes to fully stop
  pause:
    seconds: 5

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes

- name: Start virtlogd socket
  systemd:
    name: virtlogd.socket
    state: started
    enabled: true

- name: Start libvirtd socket
  systemd:
    name: libvirtd.socket
    state: started
    enabled: true

- name: Wait for sockets to initialize
  pause:
    seconds: 5

- name: Start and enable libvirtd service
  systemd:
    name: libvirtd
    state: started
    enabled: true
    daemon_reload: yes

- name: Wait for libvirtd to be fully operational
  wait_for:
    path: /var/run/libvirt/libvirt-sock
    state: present
    timeout: 30

- name: Verify libvirtd is running
  command: systemctl status libvirtd
  register: libvirtd_status
  changed_when: false
  failed_when: "'active (running)' not in libvirtd_status.stdout"
